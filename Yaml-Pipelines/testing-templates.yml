


trigger: none


pool:
  vmImage: ubuntu-latest

variables:
  backendAzureRmResourceGroupName: "rgazdevsea01"
  backendAzureRmStorageAccountName: "saazdevsea01"
  backendAzureRmContainerName: "tfstateazdevsea01"
  backendAzureRmKey: "terraform.tfstate"
  varFile: './env-tfVars/dev.tfvars'
  environmentServiceNameAzureRM: 'AzureIntegration'
  backendServiceArm: 'AzureIntegration'
  workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
  anyTfChanges: false

resources:
  repositories:
    - repository: Azure_Integration_Templates
      type: github
      name: Atharva20/Azure_Integration_Templates
      endpoint: Atharva20
      ref: 'refs/heads/main'

stages:
  - stage: terraform_validate
    displayName: 'Terraform Validate'
    jobs:
      - job: terraform_validate
        displayName: 'Validating Terraform'
        steps:
          - template: yaml-templates/test-template.yml@Azure_Integration_Templates
            parameters:
              backendAzureRmResourceGroupName: '$(backendAzureRmResourceGroupName)'
              backendAzureRmStorageAccountName: '$(backendAzureRmStorageAccountName)'
              backendAzureRmContainerName: '$(backendAzureRmContainerName)'
              backendAzureRmKey: '$(backendAzureRmKey)'
              varFile: '$(varFile)'
              environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'
              backendServiceArm: '$(backendServiceArm)'
              workingDirectory: '$(workingDirectory)'

  - stage: functionapp_validate
    displayName: 'FunctionApp Validate'
    jobs:
      - job: functionapp_validate
        displayName: 'FunctionApp Validating'
        steps:
          - template: yaml-templates/functionapp-build-and-validate.yml@Azure_Integration_Templates
            parameters:
              workingDirectory: '$(workingDirectory)'
              dotNetSdkVersion: 8.x
              projects: |
                **/FunctionApp/*.csproj
                **/Unit-Tests/*.csproj

        
